# deployments/kubernetes/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cbc-auth-service
  namespace: cbc-system
  labels:
    app: cbc-auth-service
    version: v1
    component: auth
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: cbc-auth-service
  template:
    metadata:
      labels:
        app: cbc-auth-service
        version: v1
        component: auth
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: cbc-auth-service
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000

      containers:
        - name: auth-service
          image: turtacn/cbc-auth-service:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: grpc
              containerPort: 9090
              protocol: TCP
            - name: metrics
              containerPort: 9091
              protocol: TCP

          env:
            - name: APP_ENV
              value: "production"
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FORMAT
              value: "json"

            # Database configuration
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: cbc-auth-config
                  key: db.host
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: cbc-auth-config
                  key: db.port
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: cbc-auth-config
                  key: db.name
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: cbc-auth-secret
                  key: db.user
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: cbc-auth-secret
                  key: db.password

            # Redis configuration
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: cbc-auth-config
                  key: redis.host
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  name: cbc-auth-config
                  key: redis.port
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: cbc-auth-secret
                  key: redis.password

            # JWT configuration
            - name: JWT_ISSUER
              valueFrom:
                configMapKeyRef:
                  name: cbc-auth-config
                  key: jwt.issuer
            - name: JWT_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  name: cbc-auth-secret
                  key: jwt.private.key
            - name: JWT_PUBLIC_KEY
              valueFrom:
                secretKeyRef:
                  name: cbc-auth-secret
                  key: jwt.public.key

          resources:
            requests:
              cpu: 200m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi

          livenessProbe:
            httpGet:
              path: /health/live
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3

          readinessProbe:
            httpGet:
              path: /health/ready
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3

          volumeMounts:
            - name: config
              mountPath: /app/config
              readOnly: true
            - name: secrets
              mountPath: /app/secrets
              readOnly: true

      volumes:
        - name: config
          configMap:
            name: cbc-auth-config
        - name: secrets
          secret:
            secretName: cbc-auth-secret

      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - cbc-auth-service
                topologyKey: kubernetes.io/hostname

      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app: cbc-auth-service
